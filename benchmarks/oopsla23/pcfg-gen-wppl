#!/usr/bin/perl
#
# Usage: pcfg-gen-wppl $size $method
#
# Generate a WebPPL program to compute the distribution of string lengths
# generated by the PCFG
#   S -> SS (probability $prob)
#   S -> a  (probability 1-$prob)
#
# $method can be rejection, MCMC, incrementalMH, SMC
# $size is the number of samples or particles

use strict;
my $size = $ARGV[0] // 500000;
my $method = $ARGV[1] // 'rejection';

print <<'END';
var S = function() {
  if (flip(0.9))
    return ['A'];
  else
    return S().concat(S());
}
var model = function() {
  return S().length;
}
END
my $size_name = $method eq 'SMC' ? 'particles' : 'samples';
print "display('$size $method');\n";
print "Infer({ model, method: '$method', $size_name: $size }).getDist();\n";
# Infer({ model, method: 'rejection', samples: 5e7 }).getDist();
# Infer({ model, method: 'SMC', particles: 3e6 }).getDist();
# Infer({ model, method: 'incrementalMH', samples: 3e7 }).getDist();
# Infer({ model, method: 'MCMC', samples: 3e7 }).getDist();
